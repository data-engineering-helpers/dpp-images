#
# File: https://github.com/data-engineering-helpers/dpp-images/blob/main/.github/workflows/python-jdk21-build-publish.yml
# 
# On Docker Hub:
# * https://hub.docker.com/repository/docker/infrahelpers/dpp/tags
#
# Dockerfiles:
# * Python: https://github.com/data-engineering-helpers/dpp-images/tree/main/corretto-emr-dbs-universal-pyspark/Dockerfile
#   * Usual tags on Docker Hub: infrahelpers/dpp:jdk21-python3.Y
#
# Docker Cloud builds
# -------------------
# The number of build minutes are limited per month, and increasing
# that limit is expensive. The activation of Docker Cloud builds is
# therefore commented throughout this CI/CD pipeline.
# References:
# * https://docs.docker.com/build-cloud/
# * https://docs.docker.com/build-cloud/ci/
# * Cloud builders: https://app.docker.com/build/accounts/infrahelpers/builders
#
# SBOM and attestations of provenance
# -----------------------------------
# * https://docs.docker.com/scout/policy/#supply-chain-attestations
# * https://docs.docker.com/build/metadata/attestations/
#   * With GitHub Actions:
#     https://docs.docker.com/build/ci/github-actions/attestations/
#
# Scheduling builds
# -----------------
# * https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
# * https://crontab.guru/#0_0_*_*_1,2,4,6
#
name: Python JDK21 images building and publishing

on:
  push:
    branches:
    - main
  schedule:
    - cron: "0 0 * * 1,2,4,6" # Trigger a build at 00:00 UTC on Mon., Tue., Thu. and Sat.
  workflow_dispatch:

env:
  ORG_NAME: infrahelpers
  IMAGE_NAME: infrahelpers/dpp
  JDK_VERSION: 21
  JDK_TYPE: leg
    
jobs:

  build_python_images:
    strategy:
      matrix:
        # Use the latest releases for each minor version:
        # https://www.python.org/downloads/source/
        # See also
        #  https://github.com/data-engineering-helpers/dpp-images/tree/main/matrix/python
        python_micro_version: [3.11.13, 3.12.11]

    environment: docker-hub

    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        # Uncomment the following to activate the Docker Cloud builds
        #with:
        #  version: "lab:latest"
        #  driver: cloud
        #  endpoint: "${{ env.ORG_NAME}}/default"
        #  install: true

      - name: Extract Minor Version
        id: extract_minor_version
        run: |
          minor_version=$(echo "${{ matrix.python_micro_version }}" | cut -d. -f1-2)
          echo "minor_version=${minor_version}" >> $GITHUB_OUTPUT

      # https://github.com/benjlevesque/short-sha
      - name: Load short sha
        uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 7

      # https://github.com/docker/build-push-action
      - name: Build Corretto with EMR-/Databricks-compatible Python installed
        id: docker_build_corretto_python
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./corretto-emr-dbs-universal-pyspark
          file: ./corretto-emr-dbs-universal-pyspark/Dockerfile
          build-args: |
            # https://www.java.com/releases/matrix/
            JDK_VERSION=${{ env.JDK_VERSION }}
            PYTHON_MINOR_VERSION=${{ steps.extract_minor_version.outputs.minor_version }}
            PYTHON_MICRO_VERSION=${{ matrix.python_micro_version }}
          push: true
          provenance: mode=max
          sbom: true
          tags: |
            ${{ env.IMAGE_NAME }}:jdk${{ env.JDK_VERSION }}-python${{ steps.extract_minor_version.outputs.minor_version }}
            ${{ env.IMAGE_NAME }}:jdk${{ env.JDK_VERSION }}-python${{ steps.extract_minor_version.outputs.minor_version }}-${{ env.SHA }}
            ${{ env.IMAGE_NAME }}:jdk${{ env.JDK_VERSION }}-python${{ matrix.python_micro_version }}
            ${{ env.IMAGE_NAME }}:jdk${{ env.JDK_VERSION }}-python${{ matrix.python_micro_version }}-${{ env.SHA }}
            ${{ env.IMAGE_NAME }}:jdk${{ env.JDK_VERSION }}-python
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          # Uncomment the following 3 lines to activate the Docker Cloud builds
          #outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}
          #cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:build-cache-jdk-python
          #cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:build-cache-jdk-python,mode=max
          # Comment the following 2 lines when activating the Docker Cloud builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64/v8

